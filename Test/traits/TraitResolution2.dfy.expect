TraitResolution2.dfyp(70,22): Error: the type of in-parameter 'x' is different from the type of the corresponding in-parameter in trait method ('int' instead of '(Y, B)')
TraitResolution2.dfyp(94,11): Error: new can be applied only to class types (got A?)
TraitResolution2.dfyp(95,11): Error: new can be applied only to class types (got ASynonym)
TraitResolution2.dfyp(98,11): Error: new can be applied only to class types (got B?)
TraitResolution2.dfyp(98,11): Error: when allocating an object of type 'B', one of its constructor methods must be called
TraitResolution2.dfyp(101,11): Error: new can be applied only to class types (got C?<A>)
TraitResolution2.dfyp(103,11): Error: new can be applied only to class types (got C?<A?>)
TraitResolution2.dfyp(106,11): Error: new can be applied only to class types (got D?<A>)
TraitResolution2.dfyp(106,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(108,11): Error: new can be applied only to class types (got D?<A?>)
TraitResolution2.dfyp(108,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(110,11): Error: new can be applied only to class types (got D<A>)
TraitResolution2.dfyp(110,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(112,11): Error: new can be applied only to class types (got D<A?>)
TraitResolution2.dfyp(112,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(113,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution2.dfyp(113,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(114,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution2.dfyp(114,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution2.dfyp(117,11): Error: new can be applied only to class types (got object?)
TraitResolution2.dfyp(118,11): Error: new can be applied only to class types (got ObjectSynonym)
TraitResolution2.dfyp(119,11): Error: new can be applied only to class types (got ObjectWithConstraint)
TraitResolution2.dfyp(122,13): Error: new can be applied only to class types (got array?<int>)
TraitResolution2.dfyp(124,11): Error: new can be applied only to class types (got int)
TraitResolution2.dfyp(126,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution2.dfyp(127,11): Error: new can be applied only to class types (got Tr?<int>)
TraitResolution2.dfyp(128,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution2.dfyp(129,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution2.dfyp(181,8): Error: field 'civ' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(182,14): Error: field 'giv' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(183,10): Error: const field 'cic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(184,16): Error: const field 'gic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(185,17): Error: static const field 'csc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(186,23): Error: static const field 'gsc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(192,20): Error: fully defined function 'cif2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(193,13): Error: fully defined function 'gif2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(194,20): Error: fully defined function 'cif3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(195,13): Error: fully defined function 'gif3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(197,27): Error: static function 'csf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(198,20): Error: static function 'gsf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(199,27): Error: static function 'csf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(200,20): Error: static function 'gsf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(201,27): Error: static function 'csf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(202,20): Error: static function 'gsf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(203,27): Error: static function 'csf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(204,20): Error: static function 'gsf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(210,11): Error: fully defined method 'cim2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(211,17): Error: fully defined method 'gim2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(212,11): Error: fully defined method 'cim3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(213,17): Error: fully defined method 'gim3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(215,18): Error: static method 'csm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(216,24): Error: static method 'gsm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(217,18): Error: static method 'csm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(218,24): Error: static method 'gsm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(219,18): Error: static method 'csm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(220,24): Error: static method 'gsm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(221,18): Error: static method 'csm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(222,24): Error: static method 'gsm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution2.dfyp(245,13): Error: overridden function 'F' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution2.dfyp(246,20): Error: overridden function 'G' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution2.dfyp(249,17): Error: overridden method 'M' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution2.dfyp(250,11): Error: overridden method 'N' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution2.dfyp(266,10): Error: method 'N' in 'AAA' can only be overridden by a method (got lemma)
TraitResolution2.dfyp(267,17): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got method)
TraitResolution2.dfyp(282,19): Error: method 'N' in 'AAA' can only be overridden by a method (got twostate lemma)
TraitResolution2.dfyp(283,19): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got twostate lemma)
TraitResolution2.dfyp(284,10): Error: twostate lemma 'K' in 'AAA' can only be overridden by a twostate lemma (got lemma)
TraitResolution2.dfyp(302,23): Error: least predicate 'P' in 'AAA' can only be overridden by a least predicate (got greatest predicate)
TraitResolution2.dfyp(303,20): Error: greatest predicate 'Q' in 'AAA' can only be overridden by a greatest predicate (got least predicate)
TraitResolution2.dfyp(304,19): Error: least lemma 'R' in 'AAA' can only be overridden by a least lemma (got greatest lemma)
TraitResolution2.dfyp(305,16): Error: greatest lemma 'S' in 'AAA' can only be overridden by a greatest lemma (got least lemma)
TraitResolution2.dfyp(315,16): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got least lemma)
TraitResolution2.dfyp(318,14): Error: least predicate 'P' in 'AAA' can only be overridden by a least predicate (got predicate)
TraitResolution2.dfyp(319,14): Error: greatest predicate 'Q' in 'AAA' can only be overridden by a greatest predicate (got predicate)
TraitResolution2.dfyp(320,10): Error: least lemma 'R' in 'AAA' can only be overridden by a least lemma (got lemma)
TraitResolution2.dfyp(321,10): Error: greatest lemma 'S' in 'AAA' can only be overridden by a greatest lemma (got lemma)
TraitResolution2.dfyp(357,20): Error: the type of special parameter '_k' of least predicate 'Q' (ORDINAL) must be the same as in the overridden least predicate (nat)
TraitResolution2.dfyp(361,16): Error: the type of special parameter '_k' of least lemma 'L' (ORDINAL) must be the same as in the overridden least lemma (nat)
TraitResolution2.dfyp(365,20): Error: the type of special parameter '_k' of least predicate 'P' (nat) must be the same as in the overridden least predicate (ORDINAL)
TraitResolution2.dfyp(367,20): Error: the type of special parameter '_k' of least predicate 'R' (nat) must be the same as in the overridden least predicate (ORDINAL)
TraitResolution2.dfyp(369,16): Error: the type of special parameter '_k' of least lemma 'K' (nat) must be the same as in the overridden least lemma (ORDINAL)
TraitResolution2.dfyp(371,16): Error: the type of special parameter '_k' of least lemma 'M' (nat) must be the same as in the overridden least lemma (ORDINAL)
TraitResolution2.dfyp(375,20): Error: the type of special parameter '_k' of least predicate 'Q' (ORDINAL) must be the same as in the overridden least predicate (nat)
TraitResolution2.dfyp(379,16): Error: the type of special parameter '_k' of least lemma 'L' (ORDINAL) must be the same as in the overridden least lemma (nat)
84 resolution/type errors detected in TraitResolution2.dfyp
