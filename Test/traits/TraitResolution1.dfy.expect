TraitResolution1.dfyp(65,22): Error: the type of in-parameter 'x' is different from the type of the corresponding in-parameter in trait method ('int' instead of '(Y, B)')
TraitResolution1.dfyp(89,11): Error: new can be applied only to class types (got A?)
TraitResolution1.dfyp(90,11): Error: new can be applied only to class types (got ASynonym)
TraitResolution1.dfyp(93,11): Error: new can be applied only to class types (got B?)
TraitResolution1.dfyp(93,11): Error: when allocating an object of type 'B', one of its constructor methods must be called
TraitResolution1.dfyp(96,11): Error: new can be applied only to class types (got C?<A>)
TraitResolution1.dfyp(98,11): Error: new can be applied only to class types (got C?<A?>)
TraitResolution1.dfyp(101,11): Error: new can be applied only to class types (got D?<A>)
TraitResolution1.dfyp(101,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(103,11): Error: new can be applied only to class types (got D?<A?>)
TraitResolution1.dfyp(103,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(105,11): Error: new can be applied only to class types (got D<A>)
TraitResolution1.dfyp(105,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(107,11): Error: new can be applied only to class types (got D<A?>)
TraitResolution1.dfyp(107,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(108,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution1.dfyp(108,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(109,11): Error: new can be applied only to class types (got DSynonym<A?>)
TraitResolution1.dfyp(109,11): Error: when allocating an object of type 'D', one of its constructor methods must be called
TraitResolution1.dfyp(112,11): Error: new can be applied only to class types (got object?)
TraitResolution1.dfyp(113,11): Error: new can be applied only to class types (got ObjectSynonym)
TraitResolution1.dfyp(114,11): Error: new can be applied only to class types (got ObjectWithConstraint)
TraitResolution1.dfyp(117,13): Error: new can be applied only to class types (got array?<int>)
TraitResolution1.dfyp(119,11): Error: new can be applied only to class types (got int)
TraitResolution1.dfyp(121,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution1.dfyp(122,11): Error: new can be applied only to class types (got Tr?<int>)
TraitResolution1.dfyp(123,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution1.dfyp(124,11): Error: new can be applied only to class types (got Tr<int>)
TraitResolution1.dfyp(136,8): Error: class 'P' inherits a member named 'data' from both traits 'A' and 'B'
TraitResolution1.dfyp(139,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<Even> and C<int>
TraitResolution1.dfyp(140,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<int> and C<real>
TraitResolution1.dfyp(140,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<int> and C<Even>
TraitResolution1.dfyp(150,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<(real, int)> (via X6, X4, X3) and C<seq<bool>> (via X7, X2)
TraitResolution1.dfyp(151,8): Error: duplicate trait parents with the same head type must also have the same type arguments; got C<seq<bool>> (via X7, X2) and C<(real, int)> (via X6, X4, X3)
TraitResolution1.dfyp(168,8): Error: class 'P' inherits a member named 'data' from both traits 'B' and 'A'
TraitResolution1.dfyp(169,8): Error: class 'Q' inherits a member named 'data' from both traits 'C' and 'A'
TraitResolution1.dfyp(170,8): Error: class 'R' inherits a member named 'data' from both traits 'D' and 'A'
TraitResolution1.dfyp(175,17): Error: static non-ghost const field 'Cnst' of type 'object' (which does not have a default compiled value) must give a defining value
TraitResolution1.dfyp(236,8): Error: field 'civ' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(237,14): Error: field 'giv' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(238,10): Error: const field 'cic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(239,16): Error: const field 'gic' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(240,17): Error: static const field 'csc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(241,23): Error: static const field 'gsc' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(247,20): Error: fully defined function 'cif2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(248,13): Error: fully defined function 'gif2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(249,20): Error: fully defined function 'cif3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(250,13): Error: fully defined function 'gif3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(252,27): Error: static function 'csf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(253,20): Error: static function 'gsf0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(254,27): Error: static function 'csf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(255,20): Error: static function 'gsf1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(256,27): Error: static function 'csf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(257,20): Error: static function 'gsf2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(258,27): Error: static function 'csf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(259,20): Error: static function 'gsf3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(265,11): Error: fully defined method 'cim2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(266,17): Error: fully defined method 'gim2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(267,11): Error: fully defined method 'cim3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(268,17): Error: fully defined method 'gim3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(270,18): Error: static method 'csm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(271,24): Error: static method 'gsm0' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(272,18): Error: static method 'csm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(273,24): Error: static method 'gsm1' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(274,18): Error: static method 'csm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(275,24): Error: static method 'gsm2' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(276,18): Error: static method 'csm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(277,24): Error: static method 'gsm3' is inherited from trait 'Tr' and is not allowed to be re-declared
TraitResolution1.dfyp(299,13): Error: overridden function 'F' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution1.dfyp(300,20): Error: overridden function 'G' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution1.dfyp(303,17): Error: overridden method 'M' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution1.dfyp(304,11): Error: overridden method 'N' in 'SwitchGhostStatus' has different ghost/compiled status than in trait 'AAA'
TraitResolution1.dfyp(320,10): Error: method 'N' in 'AAA' can only be overridden by a method (got lemma)
TraitResolution1.dfyp(321,17): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got method)
TraitResolution1.dfyp(336,19): Error: method 'N' in 'AAA' can only be overridden by a method (got twostate lemma)
TraitResolution1.dfyp(337,19): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got twostate lemma)
TraitResolution1.dfyp(338,10): Error: twostate lemma 'K' in 'AAA' can only be overridden by a twostate lemma (got lemma)
TraitResolution1.dfyp(356,23): Error: least predicate 'P' in 'AAA' can only be overridden by a least predicate (got greatest predicate)
TraitResolution1.dfyp(357,20): Error: greatest predicate 'Q' in 'AAA' can only be overridden by a greatest predicate (got least predicate)
TraitResolution1.dfyp(358,19): Error: least lemma 'R' in 'AAA' can only be overridden by a least lemma (got greatest lemma)
TraitResolution1.dfyp(359,16): Error: greatest lemma 'S' in 'AAA' can only be overridden by a greatest lemma (got least lemma)
TraitResolution1.dfyp(369,16): Error: lemma 'L' in 'AAA' can only be overridden by a lemma (got least lemma)
TraitResolution1.dfyp(372,14): Error: least predicate 'P' in 'AAA' can only be overridden by a least predicate (got predicate)
TraitResolution1.dfyp(373,14): Error: greatest predicate 'Q' in 'AAA' can only be overridden by a greatest predicate (got predicate)
TraitResolution1.dfyp(374,10): Error: least lemma 'R' in 'AAA' can only be overridden by a least lemma (got lemma)
TraitResolution1.dfyp(375,10): Error: greatest lemma 'S' in 'AAA' can only be overridden by a greatest lemma (got lemma)
TraitResolution1.dfyp(408,20): Error: the type of special parameter '_k' of least predicate 'Q' (ORDINAL) must be the same as in the overridden least predicate (nat)
TraitResolution1.dfyp(412,16): Error: the type of special parameter '_k' of least lemma 'L' (ORDINAL) must be the same as in the overridden least lemma (nat)
TraitResolution1.dfyp(416,20): Error: the type of special parameter '_k' of least predicate 'P' (nat) must be the same as in the overridden least predicate (ORDINAL)
TraitResolution1.dfyp(418,20): Error: the type of special parameter '_k' of least predicate 'R' (nat) must be the same as in the overridden least predicate (ORDINAL)
TraitResolution1.dfyp(420,16): Error: the type of special parameter '_k' of least lemma 'K' (nat) must be the same as in the overridden least lemma (ORDINAL)
TraitResolution1.dfyp(422,16): Error: the type of special parameter '_k' of least lemma 'M' (nat) must be the same as in the overridden least lemma (ORDINAL)
TraitResolution1.dfyp(426,20): Error: the type of special parameter '_k' of least predicate 'Q' (ORDINAL) must be the same as in the overridden least predicate (nat)
TraitResolution1.dfyp(430,16): Error: the type of special parameter '_k' of least lemma 'L' (ORDINAL) must be the same as in the overridden least lemma (nat)
TraitResolution1.dfyp(476,8): Error: class 'AAA' with fields without known initializers, like 'w' of type '(Y, Y)', must declare a constructor
TraitResolution1.dfyp(481,8): Error: class 'BBB' with fields without known initializers, like 'w' of type 'Forever', must declare a constructor
TraitResolution1.dfyp(513,24): Error: type parameter (X) passed to type RequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(518,27): Error: type parameter (X) passed to type RequiresZero must support auto-initialization (got Y) (perhaps try declaring type parameter 'Y' on line 518 as 'Y(0)', which says it can only be instantiated with a type that supports auto-initialization)
TraitResolution1.dfyp(523,27): Error: type parameter (X) passed to type RequiresZero must support auto-initialization (got (Y, Y))
TraitResolution1.dfyp(530,8): Error: set argument type must support equality (got X) (perhaps try declaring type parameter 'X' on line 529 as 'X(==)', which says it can only be instantiated with a type that supports equality)
TraitResolution1.dfyp(536,28): Error: set argument type must support equality (got Forever)
TraitResolution1.dfyp(537,41): Error: type parameter (X) passed to type RequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(538,41): Error: type parameter (X) passed to type RequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(504,18): Error: type parameter (Y) passed to type ClassRequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(504,18): Error: type parameter (Y) passed to type ClassRequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(507,44): Error: type parameter (Y) passed to type ClassRequiresZero must support auto-initialization (got Forever)
TraitResolution1.dfyp(543,18): Error: a trait can only extend traits (found 'object?')
TraitResolution1.dfyp(545,18): Error: a class can only extend traits (found 'object?')
TraitResolution1.dfyp(554,16): Error: type parameter 'S' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(554,19): Error: type parameter 'T' is not allowed to change the requirement of being nonempty
TraitResolution1.dfyp(554,22): Error: type parameter 'U' is not allowed to change the no-reference-type requirement
TraitResolution1.dfyp(554,25): Error: type parameter 'V' is not allowed to change the requirement of supporting equality
TraitResolution1.dfyp(555,18): Error: type parameter 'S' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(555,21): Error: type parameter 'T' is not allowed to change the requirement of being nonempty
TraitResolution1.dfyp(555,24): Error: type parameter 'U' is not allowed to change the no-reference-type requirement
TraitResolution1.dfyp(555,27): Error: type parameter 'V' is not allowed to change the requirement of supporting equality
TraitResolution1.dfyp(558,13): Error: type parameter 'R' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(558,25): Error: type parameter 'T' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(559,15): Error: type parameter 'R' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(559,27): Error: type parameter 'T' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(562,13): Error: type parameter 'R' is not allowed to change the requirement of being nonempty
TraitResolution1.dfyp(562,20): Error: type parameter 'S' is not allowed to change the requirement of supporting auto-initialization
TraitResolution1.dfyp(563,15): Error: type parameter 'R' is not allowed to change the requirement of being nonempty
TraitResolution1.dfyp(563,22): Error: type parameter 'S' is not allowed to change the requirement of supporting auto-initialization
124 resolution/type errors detected in TraitResolution1.dfyp
