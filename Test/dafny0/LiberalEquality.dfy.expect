LiberalEquality.dfyp(22,14): Error: arguments must have comparable types (got T and U)
LiberalEquality.dfyp(23,14): Error: arguments must have comparable types (got U and int)
LiberalEquality.dfyp(31,14): Error: arguments must have comparable types (got array<T> and array3<T>)
LiberalEquality.dfyp(32,14): Error: arguments must have comparable types (got array<int> and array3<int>)
LiberalEquality.dfyp(33,14): Error: arguments must have comparable types (got array<T> and array3<int>)
LiberalEquality.dfyp(34,14): Error: arguments must have comparable types (got array<int> and array3<T>)
LiberalEquality.dfyp(42,14): Error: arguments must have comparable types (got Weird<T, int, V> and Weird<T, bool, V>)
LiberalEquality.dfyp(52,13): Error: arguments must have comparable types (got Weird<T, bool, T> and Weird<T, int, T>)
LiberalEquality.dfyp(61,14): Error: arguments must have comparable types (got array<int> and array<bool>)
LiberalEquality.dfyp(73,13): Error: arguments must have comparable types (got T ~> int and int ~> int)
LiberalEquality.dfyp(74,13): Error: arguments must have comparable types (got int ~> T and int ~> int)
LiberalEquality.dfyp(84,13): Error: arguments must have comparable types (got Syn<int> and Syn<bool>)
LiberalEquality.dfyp(95,13): Error: arguments must have comparable types (got array<List<int>> and array<List<bool>>) (non-variant type parameter would require int = bool)
LiberalEquality.dfyp(95,13): Error: arguments must have comparable types (got array<List<int>> and array<List<bool>>) (non-variant type parameter would require bool = int)
LiberalEquality.dfyp(97,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<T, int>>) (non-variant type parameter would require bool = int)
LiberalEquality.dfyp(97,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<T, int>>) (non-variant type parameter would require int = bool)
LiberalEquality.dfyp(99,13): Error: arguments must have comparable types (got array<List<int>> and array<ListSynonym<int, T>>) (non-variant type parameter would require int = T)
LiberalEquality.dfyp(99,13): Error: arguments must have comparable types (got array<List<int>> and array<ListSynonym<int, T>>) (non-variant type parameter would require T = int)
LiberalEquality.dfyp(100,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<int, T>>) (non-variant type parameter would require bool = T)
LiberalEquality.dfyp(100,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<int, T>>) (non-variant type parameter would require T = bool)
LiberalEquality.dfyp(101,13): Error: arguments must have comparable types (got array<ListSynonym<bool, int>> and array<ListSynonym<int, T>>) (non-variant type parameter would require int = T)
LiberalEquality.dfyp(101,13): Error: arguments must have comparable types (got array<ListSynonym<bool, int>> and array<ListSynonym<int, T>>) (non-variant type parameter would require T = int)
LiberalEquality.dfyp(103,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<real, Wrapper<int>>>) (non-variant type parameter would require bool = Wrapper<int>)
LiberalEquality.dfyp(103,13): Error: arguments must have comparable types (got array<List<bool>> and array<ListSynonym<real, Wrapper<int>>>) (non-variant type parameter would require Wrapper<int> = bool)
24 resolution/type errors detected in LiberalEquality.dfyp
