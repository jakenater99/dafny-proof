DTypes.dfyp(214,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'm' to have the value 'null', declare its type to be 'MyClass?')
DTypes.dfyp(215,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'b' to have the value 'null', declare its type to be 'Cell?<MyClass>')
DTypes.dfyp(222,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'm' to have the value 'null', declare its type to be 'MyClass?')
DTypes.dfyp(223,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'c' to have the value 'null', declare its type to be 'Cell?<MyClass>')
DTypes.dfyp(231,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'm' to have the value 'null', declare its type to be 'MyClass?')
DTypes.dfyp(232,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'c' to have the value 'null', declare its type to be 'Cell?<MyClass>')
DTypes.dfyp(233,14): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'false' (to make it possible for variable 'd' to have the value 'null', declare its type to be 'Cell?<MyClass>')
DTypes.dfyp(64,13): Warning: the type of the other operand is a non-null type, so this comparison with 'null' will always return 'true' (to make it possible for variable 'a' to have the value 'null', declare its type to be 'CP?<int, C>')
DTypes.dfyp(179,2): Error: A postcondition might not hold on this return path.
DTypes.dfyp(178,14): Related location: This is the postcondition that might not hold.
DTypes.dfyp(18,13): Error: assertion might not hold
DTypes.dfyp(56,17): Error: assertion might not hold
DTypes.dfyp(121,11): Error: assertion might not hold
DTypes.dfyp(93,29): Related location
DTypes.dfyp(127,11): Error: assertion might not hold
DTypes.dfyp(93,19): Related location
DTypes.dfyp(137,11): Error: assertion might not hold
DTypes.dfyp(132,4): Related location
DTypes.dfyp(93,19): Related location
DTypes.dfyp(156,11): Error: assertion might not hold

Dafny program verifier finished with 22 verified, 7 errors
